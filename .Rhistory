ciclo_edicativo
ciclo_educativo
lapply(ciclo_educativo, function(x) rep(x, length(categoria)))
unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria))))
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria))))
"cat" = rep(categoria, length(ciclo_educativo))
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria)))),
"cat" = rep(categoria, length(ciclo_educativo))
)
cols
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios[-1]
barrios <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrios
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios[-1]
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios[-1]
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
cols
rep(cols, length(barrios))
unlist(rep(cols, length(barrios)))
unlist(rep(cols$ciclo_educativo, length(barrios)))
unlist(rep(cols$cat, length(barrios)))
data.frame(
"barrio" = barrios_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios)))
)
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios)))
)
barrio_col
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
cols
data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios)))
)
full_columns <- data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios)))
)
full_columns
matrix(year_2018)
year_2018
year_2018[ ,3:ncol(year_2018)]
year_2018[1:6 ,3:ncol(year_2018)]
year_2018[6:nrow(year_2018), 3:ncol(year_2018)]
year_2018[6:nrow(year_2018)-1, 3:ncol(year_2018)]
# Use -1 to remove that NA last row
year_2018[7:nrow(year_2018)-1, 3:ncol(year_2018)]
# Use -1 to remove that NA last row
matrix(year_2018[7:nrow(year_2018)-1, 3:ncol(year_2018)])
# Use -1 to remove that NA last row
year_2018[7:nrow(year_2018)-1, 3:ncol(year_2018)]
barrios
length(barrios)
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
cols
dim(cols)
dim(cols)
dim(barrios)
barrios
barrios
lenght(barrios)
lenght(barrios)
length(barrios)
# Use -1 to remove that NA last row
year_2018[8:nrow(year_2018)-1, 3:ncol(year_2018)]
# Use -1 to remove that NA last row
values <- year_2018[8:nrow(year_2018)-1, 3:ncol(year_2018)]
values
unlist(values)
c(unlist(values))
c(values)
values[1]
values[, 1]
values[1, ]
unlist(values[1, ])
c(values[1, ])
values[1, ]
?for
)
matrix(values)
values
as.numeric(values)
(values
values
values[1, ]
as.vector(values)
nrow(barrios)
barrios
length(barrios)
vals <- c()
for(i in 1:length(barrios)) {
vals <- c(vals, values[ ,i])
}
vals <- c()
for(i in 1:length(barrios)) {
vals <- c(vals, values[i, ])
}
vals
t(values)
as.vector(t(values))
year_2018 <- read_excel("../Matricula.xlsx", sheet = "2018")
year_2019 <- read_excel("../Matricula.xlsx", sheet = "2019")
year_2020 <- read_excel("../Matricula.xlsx", sheet = "2020")
year_2021 <- read_excel("../Matricula.xlsx", sheet = "2021")
year_2022 <- read_excel("../Matricula.xlsx", sheet = "2022")
year_2023 <- read_excel("../Matricula.xlsx", sheet = "2023")
year_2024 <- read_excel("../Matricula.xlsx", sheet = "2024")
ciclo_educativo <- unlist(year_2018[4, ], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
ciclo_educativo
categoria <- year_2018[5, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
categoria
ciclo_educativo <- year_2018[4, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
ciclo_educativo
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria)))),
"cat" = rep(categoria, length(ciclo_educativo))
)
cols
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
# Use -1 to remove that NA last row
values <- year_2018[8:nrow(year_2018)-1, 3:ncol(year_2018)]
values
full_columns <-data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios))),
"values" = as.vector(t(values))
)
full_columns
full_columns
View(full_columns)
full_columns$values
str_replace_all(full_columns$values, "-", NA)
str_replace_all(full_columns$values, "-", "NA")
as.numeric(str_replace_all(full_columns$values, "-", "NA"))
# Transform to numeric
full_columns$values <- as.numeric(str_replace_all(full_columns$values, "-", "NA"))
library(ggplot)
library(ggplot2)
full_columns <-data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios))),
"values" = as.vector(t(values)),
"year" = 2018
)
# Transform to numeric
full_columns$values <- as.numeric(str_replace_all(full_columns$values, "-", "NA"))
library(ggplot2)
full_columns %>%
ggplot(aes(x = )
extract_categories <- function(df) {
categoria <- df[5, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(categoria)
}
extract_ciclo_educativo <- function(df) {
ciclo_educativo <- df[4, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(ciclo_educativo)
}
extract_categories <- function(df) {
categoria <- df[5, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(categoria)
}
extract_ciclo_educativo <- function(df) {
ciclo_educativo <- df[4, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(ciclo_educativo)
}
extract_barrios <- function(df) {
barrios <- unlist(df[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrio_column <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
return(barrios_column)
}
extract_values <- function(df) {
values <- df[8:nrow(df)-1, 3:ncol(df)]
return(values)
}
read_and_clean <- function(df, year) {
categories <- extract_categories(df)
ciclo_educativo <- extract_ciclo_educativo(df)
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria)))),
"cat" = rep(categoria, length(ciclo_educativo))
)
barrios <- extract_barrios(df)
values <- extract_values(df)
new_df <-data.frame(
"barrio" = barrios,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios))),
"values" = as.vector(t(values)),
"year" = year
)
# Transform to numeric
new_df$values <- as.numeric(str_replace_all(new_df$values, "-", "NA"))
return(new_df)
}
read_and_clean(year_2018, 2018)
extract_categories <- function(df) {
categoria <- df[5, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(categoria)
}
extract_ciclo_educativo <- function(df) {
ciclo_educativo <- df[4, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
return(ciclo_educativo)
}
extract_barrios <- function(df) {
barrios <- unlist(df[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios_column <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
return(barrios_column)
}
extract_values <- function(df) {
values <- df[8:nrow(df)-1, 3:ncol(df)]
return(values)
}
read_and_clean <- function(df, year) {
categories <- extract_categories(df)
ciclo_educativo <- extract_ciclo_educativo(df)
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria)))),
"cat" = rep(categoria, length(ciclo_educativo))
)
barrios <- extract_barrios(df)
values <- extract_values(df)
new_df <-data.frame(
"barrio" = barrios,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios))),
"values" = as.vector(t(values)),
"year" = year
)
# Transform to numeric
new_df$values <- as.numeric(str_replace_all(new_df$values, "-", "NA"))
return(new_df)
}
read_and_clean(year_2018, 2018)
df_2018 <- read_and_clean(year_2018, 2018)
df_2018 <- read_and_clean(year_2018, 2018)
df_2019 <- read_and_clean(year_2019, 2019)
rbind(df_2018, df_2019)
df_2019
full_datita <- rbind(df_2018, df_2019)
View(full_datita)
data_alumnos <- rbind(
read_and_clean(year_2018, 2018),
read_and_clean(year_2019, 2019),
read_and_clean(year_2020, 2020),
read_and_clean(year_2021, 2021),
read_and_clean(year_2022, 2022),
read_and_clean(year_2023, 2023),
read_and_clean(year_2024, 2024),
)
data_alumnos <- rbind(
read_and_clean(year_2018, 2018),
read_and_clean(year_2019, 2019),
read_and_clean(year_2020, 2020),
read_and_clean(year_2021, 2021),
read_and_clean(year_2022, 2022),
read_and_clean(year_2023, 2023),
read_and_clean(year_2024, 2024)
)
head(data_alumnos)
write.csv(data_alumnos, file = "../data/matricula_caba.csv")
View(data_alumnos)
data_alumnos %>%
filter(ciclo_educativo = "inicial_común")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat = "matrícula")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula") %>%
group_by(year) %>%
summarise(values) %>%
ungroup()
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula") %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup()
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total))
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total)) +
geom_col()
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total)) +
geom_col() +
labs(x = "Año", y = "Alumnos matriculados en 'Inicial Común'")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total)) +
geom_col() +
labs(x = "Año",
y = "Alumnos matriculados",
title = "Inicial Común")
data_alumnos %>%
filter(ciclo_educativo == "primario_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total)) +
geom_col() +
labs(x = "Año",
y = "Alumnos matriculados",
title = "Primario Común")
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup() %>%
ggplot(aes(x = year, y = total)) +
geom_col() +
labs(x = "Año",
y = "Alumnos matriculados",
title = "Inicial Común") +
theme_bw()
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values)) %>%
group_by(year) %>%
summarise(total = sum(values)) %>%
ungroup()
data_alumnos %>%
filter(ciclo_educativo == "inicial_común", cat == "matrícula", !is.na(values))
library(tidyverse)
library(readxl)
year_2018 <- read_excel("../Matricula.xlsx", sheet = "2018")
year_2019 <- read_excel("../Matricula.xlsx", sheet = "2019")
year_2020 <- read_excel("../Matricula.xlsx", sheet = "2020")
year_2021 <- read_excel("../Matricula.xlsx", sheet = "2021")
year_2022 <- read_excel("../Matricula.xlsx", sheet = "2022")
year_2023 <- read_excel("../Matricula.xlsx", sheet = "2023")
year_2024 <- read_excel("../Matricula.xlsx", sheet = "2024")
ciclo_educativo <- unlist(year_2018[4, ], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
ciclo_educativo
categoria <- year_2018[5, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
categoria
ciclo_educativo <- year_2018[4, ] |>
unlist(use.names = FALSE) |>
as.character() |>
na.omit() |>
unique() |>
tolower() |>
str_replace_all(" ", "_") |>
str_replace_all("%", "perc")
ciclo_educativo
cols <- data.frame(
"ciclo_educativo" = unlist(lapply(ciclo_educativo, function(x) rep(x, length(categoria)))),
"cat" = rep(categoria, length(ciclo_educativo))
)
cols
barrios <- unlist(year_2018[, 2], use.names = FALSE) %>%
.[!is.na(.)] %>%
unique()
barrios <- barrios[-1]
barrios
barrio_col <- unlist(lapply(barrios, function(x) rep(x, nrow(cols))))
barrio_col
# Use -1 to remove that NA last row
values <- year_2018[8:nrow(year_2018)-1, 3:ncol(year_2018)]
values
full_columns <-data.frame(
"barrio" = barrio_col,
"ciclo_educativo" = unlist(rep(cols$ciclo_educativo, length(barrios))),
"cat" = unlist(rep(cols$cat, length(barrios))),
"values" = as.vector(t(values)),
"year" = 2018
)
data_alumnos <- rbind(
read_and_clean(year_2018, 2018),
read_and_clean(year_2019, 2019),
read_and_clean(year_2020, 2020),
read_and_clean(year_2021, 2021),
read_and_clean(year_2022, 2022),
read_and_clean(year_2023, 2023),
read_and_clean(year_2024, 2024)
)
dim(data_alumnos)
